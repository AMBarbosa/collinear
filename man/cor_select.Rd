% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cor_select.R
\name{cor_select}
\alias{cor_select}
\title{Automated Multicollinearity Filtering with Pairwise Correlations}
\usage{
cor_select(
  df = NULL,
  predictors = NULL,
  preference_order = NULL,
  cor_method = "pearson",
  max_cor = 0.75
)
}
\arguments{
\item{df}{(required; data frame, tibble, or sf) A data frame with numeric predictors, and optionally a numeric response and categorical predictors. Default: NULL.}

\item{predictors}{(optional; character vector) Names of the variables to select from \code{df}. If omitted, all numeric columns in \code{df} are used instead. If argument \code{response} is not provided, non-numeric variables are ignored. Default: NULL}

\item{preference_order}{(optional; character vector) Variable names in \code{predictors}. Defines a priority order, from first to last, to preserve variables during the selection process. Variables not included in this argument are ranked by their Variance Inflation Factor. See \code{\link[=preference_order]{preference_order()}}. Default: NULL}

\item{cor_method}{(optional; character string) Method used to compute pairwise correlations. Either "pearson" or "spearman". Default: "pearson".}

\item{max_cor}{(optional; numeric) Maximum correlation allowed between any pair of variables in \code{predictors}. Recommended values are between 0.5 and 0.9. Higher values return larger number of predictors with a higher multicollinearity. If NULL, the pairwise correlation analysis is disabled. Default: \code{0.75}}
}
\value{
character vector; names of selected predictors
}
\description{
Please check the section \strong{Pairwise Correlation Filtering} at the end of this help file for further details.
}
\section{Pairwise Correlation Filtering}{


The function \code{\link[=cor_select]{cor_select()}} applies a recursive forward selection algorithm to keep predictors with a maximum Pearson correlation with all other selected predictors lower than \code{max_cor}.

If the argument \code{preference_order} is not provided, the predictors are ranked from lower to higher sum of absolute pairwise correlation with all other predictors.

If \code{preference_order} is defined, whenever two or more variables are above \code{max_cor}, the one higher in \code{preference_order} is preserved. For example, for the predictors and preference order \eqn{a} and \eqn{b}, if their correlation is higher than \code{max_cor}, then \eqn{b} will be removed and \eqn{a} preserved. If their correlation is lower than \code{max_cor}, then both are preserved.
}

\examples{
data(
  vi,
  vi_predictors
)

#reduce size of vi to speed-up example execution
vi <- vi[1:1000, ]

#mixed predictors
vi_predictors <- vi_predictors[1:10]

#parallelization setup
future::plan(
  future::multisession,
  workers = 2 #set to parallelly::availableWorkers() - 1
)

#progress bar
# progressr::handlers(global = TRUE)

#without preference order
selected_predictors <- cor_select(
  df = vi,
  predictors = vi_predictors,
  max_cor = 0.75
)

selected_predictors

#with manual preference order
selected_predictors <- cor_select(
  df = vi,
  predictors = vi_predictors,
  preference_order = c(
    "swi_mean",
    "soil_type"
  ),
  max_cor = 0.75
)

selected_predictors

#soil_type dissappears because its correlation
#with swi_mean is above max_cor
cor_df(
  df = vi,
  predictors = c(
    "swi_mean",
    "soil_type"
  )
)


#with automated preference order
#using a response variable
df_preference <- preference_order(
  df = vi,
  response = "vi_numeric",
  predictors = vi_predictors
)

selected_predictors <- cor_select(
  df = vi,
  predictors = vi_predictors,
  preference_order = df_preference,
  max_cor = 0.75
)

selected_predictors
}
\seealso{
Other pairwise_correlation: 
\code{\link{cor_df}()},
\code{\link{cor_matrix}()}
}
\author{
Blas M. Benito, PhD
}
\concept{pairwise_correlation}
