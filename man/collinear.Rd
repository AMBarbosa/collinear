% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collinear.R
\name{collinear}
\alias{collinear}
\title{Autommated multicollinearity reduction}
\usage{
collinear(
  df = NULL,
  response = NULL,
  predictors = NULL,
  preference_order = NULL,
  method = "pearson",
  max_cor = 0.75,
  max_vif = 5
)
}
\arguments{
\item{df}{(required; data frame or tibble) A data frame with numeric and/or character predictors predictors, and optionally, a response variable. Default: NULL.}

\item{response}{(recommended, character string) Name of a numeric response variable. Character response variables are ignored. Please, see 'Details' to better understand how providing this argument or not leads to different results when there are character variables in 'predictors'. Default: NULL.}

\item{predictors}{(optional; character vector) Character vector with column names of predictors in 'df'. If omitted, all columns of 'df' are used as predictors. Default:'NULL'}

\item{preference_order}{(optional; character vector) vector with column names of 'df' in the desired preference order. Predictors not included in this argument are ranked by their Variance Inflation Factor. Default: \code{NULL}.}

\item{method}{(optional; character string) Method used to compute pairwise correlations. Accepted methods are "pearson" (with a recommended minimum of 30 rows in 'df') or "spearman" (with a recommended minimum of 10 rows in 'df'). Default: "pearson".}

\item{max_cor}{(optional; numeric) Maximum correlation between any pair of the selected variables. Higher values return larger number of predictors with higher multicollinearity. Default: \code{0.75}}

\item{max_vif}{(optional, numeric) Numeric with recommended values between 2.5 and 10 defining the maximum VIF allowed in the output dataset. Higher VIF thresholds should result in a higher number of selected variables. Default: \code{5}.}
}
\value{
Character vector with the names of uncorrelated predictors.
}
\description{
Reduces multicollinearity in a set of predictors by sequentially applying \code{\link[=cor_select]{cor_select()}} and \code{\link[=vif_select]{vif_select()}}.

The function \code{\link[=cor_select]{cor_select()}} applies a recursive algorithm to remove variables with a Pearson correlation with another variable higher than a given threshold (defined by the argument \code{max_cor}).  When two variables are correlated above this threshold, the one with the highest sum of R-squared with all the other variables is removed.

The function \code{\link[=vif_select]{vif_select()}} applyies a Variance Inflation Factor (VIF) analysis to reduce multicollinearity. The VIF for a given variable \code{y} is computed as \code{1/(1-R2)}, where \code{R2} is the multiple R-squared of a multiple regression model fitted using \code{y} as response and all the remaining variables of the input data frame as predictors. The equation can be interpreted as "the rate of perfect model's R-squared to the unexplained variance of this model". The possible range of VIF values is (1, Inf]. A VIF lower than 10 suggest that removing \code{y} from the data set would reduce overall multicollinearity. The recommended thresholds for maximum VIF may vary depending on the source consulted, being the most common values, 2.5, 5, and 10.

The argument \code{preference_order} allows the user to "protect" variables that might be interesting or even required for the given analysis.

If \code{preference_order} is not provided, then the predictors are ranked from lower to higher sum of R-squared with the other preodictors, and removed one by one until the maximum R-squared of the correlation matrix is lower than \code{max_cor} and the maximum VIF is below \code{max_vif}.

Please note that near-zero variance columns are ignored by this function.
}
\examples{
if(interactive()){

data(
  ecoregions,
  ecoregions_predictors
)

#without preference_order
selected.predictors <- collinear(
  df = ecoregions,
  predictors = ecoregions_predictors,
  max_cor = 0.75,
  max_vif = 5
  )

 selected.predictors

#with preference order
selected.predictors <- collinear(
  df = ecoregions,
  predictors = ecoregions_predictors,
  preference_order = c(
    "fragmentation_ca",
    "climate_bio1_average",
    "climate_bio12_average"
  ),
  max_cor = 0.75,
  max_vif = 5
)

selected.predictors

}
}
